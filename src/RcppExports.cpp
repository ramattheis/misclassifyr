// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// ll
double ll(NumericVector theta, DataFrame tab, double lambda_pos, double lambda_dd);
RcppExport SEXP _misclassifyr_ll(SEXP thetaSEXP, SEXP tabSEXP, SEXP lambda_posSEXP, SEXP lambda_ddSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type tab(tabSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_pos(lambda_posSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_dd(lambda_ddSEXP);
    rcpp_result_gen = Rcpp::wrap(ll(theta, tab, lambda_pos, lambda_dd));
    return rcpp_result_gen;
END_RCPP
}
// gradll
NumericVector gradll(NumericVector theta, DataFrame tab, double lambda_pos, double lambda_dd);
RcppExport SEXP _misclassifyr_gradll(SEXP thetaSEXP, SEXP tabSEXP, SEXP lambda_posSEXP, SEXP lambda_ddSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type tab(tabSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_pos(lambda_posSEXP);
    Rcpp::traits::input_parameter< double >::type lambda_dd(lambda_ddSEXP);
    rcpp_result_gen = Rcpp::wrap(gradll(theta, tab, lambda_pos, lambda_dd));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_misclassifyr_ll", (DL_FUNC) &_misclassifyr_ll, 4},
    {"_misclassifyr_gradll", (DL_FUNC) &_misclassifyr_gradll, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_misclassifyr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
